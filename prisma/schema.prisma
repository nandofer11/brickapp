generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model asistencia {
  id_asistencia     Int               @id @default(autoincrement())
  fecha             DateTime          @db.Date
  id_personal       Int?
  id_semana_laboral Int
  estado            asistencia_estado
  created_at        DateTime          @default(now()) @db.DateTime(0)
  updated_at        DateTime          @default(now()) @db.DateTime(0)
  personal          personal?         @relation(fields: [id_personal], references: [id_personal], map: "asistencia_ibfk_5")
  semana_laboral    semana_laboral    @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, map: "asistencia_ibfk_6")

  @@index([id_personal], map: "asistencia_ibfk_5")
  @@index([id_semana_laboral], map: "id_semana_laboral")
}

model caja {
  id_caja             Int               @id @default(autoincrement())
  nombre              String            @db.VarChar(45)
  tipo                String            @db.VarChar(45)
  id_empresa          Int
  id_tarjeta_bancaria Int?
  empresa             empresa           @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade, map: "FK_id_empresa_caja_empresa")
  tarjeta_bancaria    tarjeta_bancaria? @relation(fields: [id_tarjeta_bancaria], references: [id_tarjeta_bancaria], onDelete: Cascade, map: "FK_id_tarjeta_bancaria_caja_tarjeta_bancaria")
  caja_semanal        caja_semanal[]

  @@index([id_empresa], map: "FK_id_empresa_caja_empresa_idx")
  @@index([id_tarjeta_bancaria], map: "FK_id_tarjeta_bancaria_caja_tarjeta_bancaria_idx")
}

model caja_semanal {
  id_caja_semanal Int      @id @default(autoincrement())
  id_caja         Int
  fecha_inicio    DateTime @db.Date
  fecha_fin       DateTime @db.Date
  saldo_apertura  Decimal  @db.Decimal(10, 2)
  saldo_cierre    Decimal? @db.Decimal(10, 2)
  total_ingresos  Decimal? @default(0.00) @db.Decimal(10, 2)
  total_egresos   Decimal? @default(0.00) @db.Decimal(10, 2)
  estado          Int      @db.TinyInt
  caja            caja     @relation(fields: [id_caja], references: [id_caja], onDelete: Cascade, map: "fk_id_caja_caja_semanal")

  @@index([id_caja], map: "fk_id_caja_caja_semanal_idx")
}

model cargo_coccion {
  id_cargo_coccion Int             @id @default(autoincrement())
  nombre_cargo     String          @db.VarChar(45)
  costo_cargo      Decimal         @db.Decimal(6, 2)
  created_at       DateTime        @default(now()) @db.DateTime(0)
  updated_at       DateTime        @default(now()) @db.DateTime(0)
  id_empresa       Int
  id_horno         Int
  empresa          empresa         @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_cargo_coccion_empresa")
  horno            horno           @relation(fields: [id_horno], references: [id_horno], onDelete: NoAction, onUpdate: NoAction, map: "FK_cargo_coccion_horno")
  coccion_turno    coccion_turno[]

  @@index([id_empresa], map: "FK_cargo_coccion_empresa_idx")
  @@index([id_horno], map: "FK_cargo_coccion_horno_idx")
}

model coccion {
  id_coccion                       Int                @id @default(autoincrement())
  semana_laboral_id_semana_laboral Int?
  fecha_encendido                  DateTime           @db.Date
  hora_inicio                      DateTime?          @db.Time(0)
  fecha_apagado                    DateTime?          @db.Date
  hora_fin                         DateTime?          @db.Time(0)
  humedad_inicial                  Int?
  estado                           String?            @db.VarChar(45)
  horno_id_horno                   Int
  humeada                          Boolean?           @default(false)
  quema                            Boolean?           @default(false)
  hora_inicio_quema                DateTime?          @db.Time(0)
  created_at                       DateTime           @default(now()) @db.DateTime(0)
  updated_at                       DateTime           @default(now()) @db.DateTime(0)
  id_empresa                       Int
  empresa                          empresa            @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_coccion_empresa")
  horno                            horno              @relation(fields: [horno_id_horno], references: [id_horno], onDelete: NoAction, onUpdate: NoAction, map: "fk_coccion_horno1")
  semana_laboral                   semana_laboral?    @relation(fields: [semana_laboral_id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "fk_semana_trabajo_id_semana_trabajo")
  coccion_turno                    coccion_turno[]
  consumo_material                 consumo_material[]

  @@index([horno_id_horno], map: "fk_coccion_horno1_idx")
  @@index([semana_laboral_id_semana_laboral], map: "fk_semana_trabajo_id_semana_trabajo_idx")
  @@index([id_empresa], map: "FK_coccion_empresa_idx")
}

model consumo_material {
  id_consumo_material  Int       @id @default(autoincrement())
  timestamp            DateTime? @db.Timestamp(0)
  material_id_material Int
  personal_id_personal Int
  coccion_id_coccion   Int
  cantidad_consumida   Int?
  coccion              coccion   @relation(fields: [coccion_id_coccion], references: [id_coccion], onDelete: Cascade, map: "fk_consumo_material_coccion1")
  material             material  @relation(fields: [material_id_material], references: [id_material], onDelete: NoAction, onUpdate: NoAction, map: "fk_consumo_material_material1")
  personal             personal  @relation(fields: [personal_id_personal], references: [id_personal], onDelete: NoAction, onUpdate: NoAction, map: "fk_consumo_material_personal1")

  @@index([coccion_id_coccion], map: "fk_consumo_material_coccion1_idx")
  @@index([material_id_material], map: "fk_consumo_material_material1_idx")
  @@index([personal_id_personal], map: "fk_consumo_material_personal1_idx")
}

model empresa {
  id_empresa             Int                      @id @default(autoincrement())
  razon_social           String                   @db.VarChar(150)
  ruc                    String                   @unique(map: "ruc_UNIQUE") @db.VarChar(11)
  ciudad                 String?                  @db.VarChar(45)
  direccion              String?                  @db.VarChar(250)
  telefono               String?                  @db.VarChar(45)
  email                  String?                  @db.VarChar(45)
  web                    String?                  @db.VarChar(45)
  logo                   String?                  @db.VarChar(45)
  created_at             DateTime                 @default(now()) @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.DateTime(0)
  caja                   caja[]
  cargo_coccion          cargo_coccion[]
  categoria              categoria[]
  cliente                cliente[]
  coccion                coccion[]
  horno                  horno[]
  numeracion_comprobante numeracion_comprobante[]
  personal               personal[]
  producto               producto[]
  rol                    rol[]
  semana_laboral         semana_laboral[]
  usuario                usuario[]
  venta                  venta[]
}

model horno {
  id_horno            Int             @id @default(autoincrement())
  prefijo             String          @unique(map: "prefijo_UNIQUE") @db.VarChar(5)
  nombre              String          @db.VarChar(45)
  cantidad_humeadores Int?
  cantidad_quemadores Int?
  created_at          DateTime        @default(now()) @db.DateTime(0)
  updated_at          DateTime        @default(now()) @db.DateTime(0)
  id_empresa          Int
  cargo_coccion       cargo_coccion[]
  coccion             coccion[]
  empresa             empresa         @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_horno_empresa")

  @@index([id_empresa], map: "FK_horno_empresa_idx")
}

model material {
  id_material             Int                       @id @default(autoincrement())
  nombre                  String                    @db.VarChar(45)
  unidad_medida           String                    @db.VarChar(45)
  descripcion             String?                   @db.VarChar(100)
  created_at              DateTime                  @default(now()) @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.DateTime(0)
  consumo_material        consumo_material[]
  detalle_compra_material detalle_compra_material[]
}

model personal {
  id_personal          Int                    @id @default(autoincrement())
  dni                  String                 @db.VarChar(8)
  ruc                  String?                @db.VarChar(11)
  nombre_completo      String                 @db.VarChar(45)
  fecha_nacimiento     DateTime               @db.Date
  ciudad               String                 @db.VarChar(45)
  direccion            String?                @db.VarChar(45)
  celular              String?                @db.VarChar(45)
  pago_diario_normal   Decimal                @db.Decimal(6, 2)
  pago_diario_reducido Decimal?               @db.Decimal(6, 2)
  fecha_ingreso        DateTime               @db.Date
  estado               Int
  id_empresa           Int?
  created_at           DateTime               @default(now()) @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.DateTime(0)
  adelanto_pago        adelanto_pago[]
  asistencia           asistencia[]
  consumo_material     consumo_material[]
  descuento_personal   descuento_personal[]
  pago_personal_semana pago_personal_semana[]
  empresa              empresa?               @relation(fields: [id_empresa], references: [id_empresa], map: "personal_ibfk_1")
  tarea_extra          tarea_extra[]

  @@index([id_empresa], map: "FK_id_empresa_personal_empresa_idx")
}

model proveedor {
  id_proveedor    Int               @id @default(autoincrement())
  tipo_documento  String            @db.VarChar(45)
  nro_documento   String            @unique(map: "nro_documento_UNIQUE") @db.VarChar(11)
  nombre          String            @db.VarChar(45)
  ciudad          String            @db.VarChar(45)
  telefono        String?           @db.VarChar(45)
  celular         String?           @db.VarChar(9)
  email           String?           @db.VarChar(45)
  created_at      DateTime          @default(now()) @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.DateTime(0)
  compra_material compra_material[]
}

model rol {
  id_rol      Int           @id @default(autoincrement())
  id_empresa  Int
  nombre      String        @db.VarChar(45)
  descripcion String?       @db.VarChar(200)
  created_at  DateTime      @default(now()) @db.DateTime(0)
  updated_at  DateTime      @default(now()) @db.DateTime(0)
  empresa     empresa       @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade, onUpdate: NoAction, map: "FK_rol_empresa")
  rol_permiso rol_permiso[]
  usuario     usuario[]

  @@index([id_empresa], map: "FK_rol_empresa_idx")
}

model tarjeta_bancaria {
  id_tarjeta_bancaria Int      @id @default(autoincrement())
  numero              String   @unique(map: "numero_tarjeta_UNIQUE") @db.VarChar(45)
  banco               String   @db.VarChar(45)
  tipo                String   @db.VarChar(45)
  fecha_vencimiento   DateTime @db.Date
  codigo_seguridad    Int
  caja                caja[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model usuario {
  id_usuario      Int         @id @default(autoincrement())
  nombre_completo String      @db.VarChar(255)
  usuario         String      @unique(map: "usuario_UNIQUE") @db.VarChar(255)
  contrasena      String      @db.VarChar(255)
  email           String?     @db.VarChar(255)
  celular         String?     @db.VarChar(255)
  id_rol          Int
  id_empresa      Int
  created_at      DateTime    @default(now()) @db.DateTime(0)
  updated_at      DateTime    @default(now()) @db.DateTime(0)
  auditoria       auditoria[]
  rol             rol         @relation(fields: [id_rol], references: [id_rol], onDelete: NoAction, map: "usuario_ibfk_63")
  empresa         empresa     @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, map: "usuario_ibfk_64")
  venta           venta[]

  @@index([id_rol], map: "id_rol")
  @@index([id_empresa], map: "id_empresa")
}

model permiso {
  id_permiso  Int           @id @default(autoincrement())
  nombre      String        @unique(map: "nombre_UNIQUE") @db.VarChar(45)
  descripcion String?       @db.VarChar(250)
  created_at  DateTime      @default(now()) @db.DateTime(0)
  updated_at  DateTime      @default(now()) @db.DateTime(0)
  rol_permiso rol_permiso[]
}

model rol_permiso {
  id_rol     Int     @default(autoincrement())
  id_permiso Int
  activo     Int?    @db.TinyInt
  permiso    permiso @relation(fields: [id_permiso], references: [id_permiso], onDelete: Cascade, onUpdate: NoAction, map: "FK_permiso_rol_permiso")
  rol        rol     @relation(fields: [id_rol], references: [id_rol], onDelete: Cascade, onUpdate: NoAction, map: "FK_rol_rol_permiso")

  @@id([id_rol, id_permiso])
  @@index([id_permiso], map: "FK_permiso_rol_permiso_idx")
}

model auditoria {
  id_auditoria         Int       @id @default(autoincrement())
  id_usuario           Int
  accion               String    @db.VarChar(45)
  tabla_afectada       String    @db.VarChar(100)
  id_registro_afectado Int
  fecha                DateTime? @db.Timestamp(0)
  usuario              usuario   @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "id_usuario")

  @@index([id_usuario], map: "id_usuario_idx")
}

model categoria {
  id_categoria Int        @id @default(autoincrement())
  nombre       String     @db.VarChar(45)
  descripcion  String?    @db.VarChar(150)
  created_at   DateTime   @default(now()) @db.DateTime(0)
  updated_at   DateTime   @default(now()) @db.DateTime(0)
  id_empresa   Int
  empresa      empresa    @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_empresa_categoria")
  producto     producto[]

  @@index([id_empresa], map: "FK_empresa_categoria_idx")
}

model cliente {
  id_cliente        Int       @id @default(autoincrement())
  tipo_cliente      String    @db.VarChar(45)
  dni               String?   @db.VarChar(8)
  ruc               String?   @db.VarChar(11)
  nombres_apellidos String?   @db.VarChar(150)
  razon_social      String?   @db.VarChar(150)
  direccion         String?   @db.MediumText
  celular           String?   @db.VarChar(9)
  correo            String?   @db.VarChar(150)
  id_empresa        Int
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  ultima_compra     DateTime? @db.Timestamp(0)
  empresa           empresa   @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_cliente_empresa")
  venta             venta[]

  @@index([id_empresa], map: "FK_cliente_empresa_idx")
}

model compra_material {
  id_compra_material      Int                       @id @default(autoincrement())
  id_proveedor            Int
  fecha_compra            DateTime                  @db.Date
  total                   Decimal                   @db.Decimal(10, 2)
  estado_pago             String                    @db.VarChar(45)
  observacion             String?                   @db.Text
  created_at              DateTime                  @default(now()) @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.DateTime(0)
  proveedor               proveedor                 @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: NoAction, onUpdate: NoAction, map: "fk_compra_proveedor1")
  detalle_compra_material detalle_compra_material[]
  pago_compra_material    pago_compra_material[]

  @@index([id_proveedor], map: "fk_compra_proveedor1_idx")
}

model comprobante_venta {
  id_comprobante_venta Int       @id @default(autoincrement())
  id_venta             Int
  tipo_comprobante     String    @db.VarChar(45)
  serie                String?   @db.VarChar(10)
  numero               String?   @db.VarChar(10)
  fecha_emision        DateTime? @default(now()) @db.Timestamp(0)
  razon_social         String?   @db.VarChar(150)
  ruc                  String?   @db.VarChar(11)
  direccion            String?   @db.VarChar(150)
  venta                venta     @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "FK_venta_comprobante_venta")

  @@index([id_venta], map: "FK_venta_comprobante_venta_idx")
}

model detalle_compra_material {
  id_detalle_compra  Int             @id @default(autoincrement())
  id_compra_material Int
  id_material        Int
  cantidad           Int
  precio_unitario    Decimal         @db.Decimal(5, 2)
  subtotal           Decimal         @db.Decimal(10, 2)
  observacion        String?         @db.VarChar(150)
  material           material        @relation(fields: [id_material], references: [id_material], onDelete: NoAction, onUpdate: NoAction, map: "fk_proveedor_detalle_compra_material")
  compra_material    compra_material @relation(fields: [id_compra_material], references: [id_compra_material], onDelete: Cascade, map: "fk_proveedor_detalle_compra_material_compra_material")

  @@index([id_compra_material], map: "fk_proveedor_detalle_compra_material_compra_material_idx")
  @@index([id_material], map: "fk_proveedor_detalle_compra_material_material_idx")
}

model detalle_venta {
  id_detalle_venta Int      @id @default(autoincrement())
  id_venta         Int
  id_producto      Int
  cantidad         Int
  precio_unitario  Decimal  @db.Decimal(10, 2)
  subtotal         Decimal? @db.Decimal(10, 2)
  producto         producto @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "FK_producto_detalle_venta")
  venta            venta    @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "FK_venta_detalle_venta")

  @@index([id_producto], map: "FK_producto_detalle_venta_idx")
  @@index([id_venta], map: "FK_venta_detalle_venta_idx")
}

model entrega_venta {
  id_entrega_venta      Int                     @id @default(autoincrement())
  id_venta              Int
  fecha                 DateTime?               @default(now()) @db.Timestamp(0)
  lugar_carga           String?                 @db.VarChar(45)
  detalle_entrega_venta detalle_entrega_venta[]
  venta                 venta                   @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "FK_venta_entrega_venta")

  @@index([id_venta], map: "FK_venta_entrega_venta_idx")
}

model numeracion_comprobante {
  id_numeracion_comprobante Int     @id @default(autoincrement())
  id_empresa                Int
  tipo_comprobante          String  @unique(map: "tipo_comprobante_UNIQUE") @db.VarChar(45)
  serie                     String  @unique(map: "serie_UNIQUE") @db.VarChar(45)
  numero_actual             Int
  empresa                   empresa @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_empresa_numeracion_comprobante")

  @@index([id_empresa], map: "FK_empresa_numeracion_comprobante_idx")
}

model pago_compra_material {
  id_pago_compra_material Int             @id @default(autoincrement())
  id_compra_material      Int
  fecha_pago              DateTime        @db.Date
  monto_pagado            Decimal         @db.Decimal(10, 2)
  metodo_pago             String          @db.VarChar(20)
  observacion             String?         @db.VarChar(150)
  created_at              DateTime        @default(now()) @db.DateTime(0)
  compra_material         compra_material @relation(fields: [id_compra_material], references: [id_compra_material], onDelete: Cascade, map: "FK_pago_compra_material")

  @@index([id_compra_material], map: "FK_pago_compra_material_idx")
}

model producto {
  id_producto           Int                     @id @default(autoincrement())
  id_categoria          Int?
  id_empresa            Int?
  nombre                String                  @db.VarChar(45)
  precio_unitario       Decimal                 @db.Decimal(10, 2)
  peso                  Decimal?                @db.Decimal(10, 2)
  dimensiones           String?                 @db.VarChar(45)
  estado                Int?                    @default(1) @db.TinyInt
  descripcion           String?                 @db.Text
  detalle_entrega_venta detalle_entrega_venta[]
  detalle_venta         detalle_venta[]
  categoria             categoria?              @relation(fields: [id_categoria], references: [id_categoria], onDelete: NoAction, onUpdate: NoAction, map: "FK_categoria_producto")
  empresa               empresa?                @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_empresa_producto")

  @@index([id_categoria], map: "FK_categoria_producto_idx")
  @@index([id_empresa], map: "FK_empresa_producto_idx")
}

model semana_laboral {
  id_semana_laboral     Int                     @id @default(autoincrement())
  fecha_inicio          DateTime                @db.Date
  fecha_fin             DateTime                @db.Date
  estado                Int                     @db.TinyInt
  id_empresa            Int
  created_at            DateTime                @default(now()) @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.DateTime(0)
  adelanto_pago         adelanto_pago[]
  adelanto_pago_detalle adelanto_pago_detalle[]
  asistencia            asistencia[]
  coccion               coccion[]
  descuento_personal    descuento_personal[]
  pago_personal_semana  pago_personal_semana[]
  empresa               empresa                 @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, map: "semana_laboral_ibfk_1")
  tarea_extra           tarea_extra[]

  @@index([id_empresa], map: "id_empresa_semana_trabajo_empresa_idx")
}

model servicio_venta {
  id_servicio_venta Int      @id @default(autoincrement())
  id_venta          Int
  requiere_flete    Int?     @default(0) @db.TinyInt
  requiere_descarga Int?     @default(0) @db.TinyInt
  direccion_entrega String?  @db.VarChar(150)
  costo_flete       Decimal? @db.Decimal(10, 2)
  costo_descarga    Decimal? @db.Decimal(10, 2)
  venta             venta    @relation(fields: [id_venta], references: [id_venta], onDelete: NoAction, onUpdate: NoAction, map: "FK_venta_servicio_venta")

  @@index([id_venta], map: "FK_venta_servicio_venta_idx")
}

model venta {
  id_venta          Int                 @id @default(autoincrement())
  id_cliente        Int
  id_usuario        Int
  id_empresa        Int
  fecha_venta       DateTime            @db.Date
  tipo_venta        String              @db.VarChar(45)
  forma_pago        String              @db.VarChar(45)
  estado_pago       String              @db.VarChar(45)
  estado_entrega    String              @db.VarChar(45)
  total             Decimal             @db.Decimal(10, 2)
  adelanto          Decimal?            @default(0.00) @db.Decimal(10, 2)
  saldo_pendiente   Decimal?            @default(0.00) @db.Decimal(10, 2)
  observaciones     String?             @db.Text
  comprobante_venta comprobante_venta[]
  detalle_venta     detalle_venta[]
  entrega_venta     entrega_venta[]
  servicio_venta    servicio_venta[]
  cliente           cliente             @relation(fields: [id_cliente], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "FK_cliente_venta")
  empresa           empresa             @relation(fields: [id_empresa], references: [id_empresa], onDelete: NoAction, onUpdate: NoAction, map: "FK_empresa_venta")
  usuario           usuario             @relation(fields: [id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: NoAction, map: "FK_usuario_venta")

  @@index([id_cliente], map: "FK_cliente_idx")
  @@index([id_empresa], map: "FK_empresa_venta_idx")
  @@index([id_usuario], map: "FK_usuario_idx")
}

model adelanto_pago {
  id_adelanto_pago      Int                     @id @default(autoincrement())
  id_personal           Int?
  id_semana_laboral     Int
  fecha                 DateTime                @db.Date
  monto                 Decimal                 @db.Decimal(6, 2)
  comentario            String?                 @db.VarChar(150)
  estado                String                  @db.VarChar(45)
  created_at            DateTime                @default(now()) @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.DateTime(0)
  personal              personal?               @relation(fields: [id_personal], references: [id_personal], onUpdate: NoAction, map: "FK_adelanto_personal")
  semana_laboral        semana_laboral          @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "FK_adelanto_semana_laboral")
  adelanto_pago_detalle adelanto_pago_detalle[]

  @@index([id_personal], map: "FK_adelanto_personal_idx")
  @@index([id_semana_laboral], map: "FK_adelanto_semana_laboral_idx")
}

model descuento_personal {
  id_descuento_personal Int            @id @default(autoincrement())
  id_personal           Int
  id_semana_laboral     Int
  fecha                 DateTime       @db.Date
  monto                 Decimal        @db.Decimal(6, 2)
  motivo                String?        @db.VarChar(250)
  created_at            DateTime       @default(now()) @db.DateTime(0)
  updated_at            DateTime       @default(now()) @db.DateTime(0)
  personal              personal       @relation(fields: [id_personal], references: [id_personal], onDelete: NoAction, onUpdate: NoAction, map: "FK_descuento_personal_personal")
  semana_laboral        semana_laboral @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "FK_descuento_personal_semana_laboral")

  @@index([id_personal], map: "FK_descuento_personal_personal_idx")
  @@index([id_semana_laboral], map: "FK_descuento_personal_semana_laboral_idx")
}

model pago_personal_semana {
  id_pago_personal_semana Int            @id @default(autoincrement())
  id_personal             Int
  id_semana_laboral       Int
  dias_completos          Int
  costo_pago_diario       Decimal?       @db.Decimal(6, 2)
  medio_dias              Int
  total_asistencia_pago   Decimal        @db.Decimal(6, 2)
  total_tareas_extra      Decimal        @db.Decimal(6, 2)
  total_coccion           Decimal        @db.Decimal(6, 2)
  total_adelantos         Decimal        @db.Decimal(6, 2)
  total_descuentos        Decimal        @db.Decimal(6, 2)
  total_pago_final        Decimal        @db.Decimal(6, 2)
  estado                  String         @db.VarChar(45)
  fecha_pago              DateTime       @db.Date
  forma_pago              String         @default("EFECTIVO") @db.VarChar(45)
  created_at              DateTime       @default(now()) @db.DateTime(0)
  updated_at              DateTime       @default(now()) @db.DateTime(0)
  personal                personal       @relation(fields: [id_personal], references: [id_personal], onDelete: NoAction, onUpdate: NoAction, map: "FK_pago_personal_semana_personal")
  semana_laboral          semana_laboral @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "FK_pago_personal_semana_semana_laboral")

  @@index([id_personal], map: "FK_pago_personal_semana_personal_idx")
  @@index([id_semana_laboral], map: "FK_pago_personal_semana_semana_laboral_idx")
}

model tarea_extra {
  id_tarea_extra    Int            @id @default(autoincrement())
  id_personal       Int
  id_semana_laboral Int
  fecha             DateTime       @db.Date
  monto             Decimal        @db.Decimal(6, 2)
  descripcion       String?        @db.VarChar(250)
  created_at        DateTime       @default(now()) @db.DateTime(0)
  updated_at        DateTime       @default(now()) @db.DateTime(0)
  personal          personal       @relation(fields: [id_personal], references: [id_personal], onDelete: NoAction, onUpdate: NoAction, map: "FK_tarea_extra_personal")
  semana_laboral    semana_laboral @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "FK_tarea_extra_semana_laboral")

  @@index([id_personal], map: "FK_tarea_extra_personal_idx")
  @@index([id_semana_laboral], map: "FK_tarea_extra_semana_laboral_idx")
}

model coccion_turno {
  id_coccion_personal            Int           @id @default(autoincrement())
  coccion_id_coccion             Int
  personal_id_personal           Int?
  cargo_coccion_id_cargo_coccion Int
  fecha                          DateTime?     @db.Date
  personal_externo               String?       @db.VarChar(45)
  created_at                     DateTime      @default(now()) @db.DateTime(0)
  updated_at                     DateTime      @default(now()) @db.DateTime(0)
  cargo_coccion                  cargo_coccion @relation(fields: [cargo_coccion_id_cargo_coccion], references: [id_cargo_coccion], onDelete: NoAction, onUpdate: NoAction, map: "fk_coccion_personal_cargo_coccion1")
  coccion                        coccion       @relation(fields: [coccion_id_coccion], references: [id_coccion], onDelete: Cascade, map: "fk_coccion_personal_coccion1")

  @@index([cargo_coccion_id_cargo_coccion], map: "fk_coccion_personal_cargo_coccion1_idx")
  @@index([coccion_id_coccion], map: "fk_coccion_personal_coccion1_idx")
  @@index([personal_id_personal], map: "fk_coccion_personal_personal1_idx")
}

model detalle_entrega_venta {
  id_detalle_entrega_venta Int           @id @default(autoincrement())
  id_entrega_venta         Int
  id_producto              Int
  cantidad                 Int
  entrega_venta            entrega_venta @relation(fields: [id_entrega_venta], references: [id_entrega_venta], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrega_venta_detalle_entrega_venta")
  producto                 producto      @relation(fields: [id_producto], references: [id_producto], onDelete: NoAction, onUpdate: NoAction, map: "fk_producto_detalle_entrega_venta")

  @@index([id_entrega_venta], map: "fk_entrega_venta_detalle_entrega_venta_idx")
  @@index([id_producto], map: "fk_producto_detalle_entrega_venta_idx")
}

model adelanto_pago_detalle {
  id_adelanto_pago_detalle Int            @id @default(autoincrement())
  id_adelanto_pago         Int
  id_semana_laboral        Int
  fecha                    DateTime       @db.Date
  monto_pagado             Decimal        @db.Decimal(6, 2)
  observacion              String?        @db.VarChar(150)
  created_at               DateTime       @default(now()) @db.DateTime(0)
  updated_at               DateTime       @default(now()) @db.DateTime(0)
  adelanto_pago            adelanto_pago  @relation(fields: [id_adelanto_pago], references: [id_adelanto_pago], onDelete: Cascade, onUpdate: NoAction, map: "FK_adelanto_pago_detalle_adelanto_pago")
  semana_laboral           semana_laboral @relation(fields: [id_semana_laboral], references: [id_semana_laboral], onDelete: NoAction, onUpdate: NoAction, map: "FK_adelanto_pago_detalle_semana_laboral")

  @@index([id_adelanto_pago], map: "FK_adelanto_pago_detalle_adelanto_pago_idx")
  @@index([id_semana_laboral], map: "FK_adelanto_pago_detalle_semana_laboral_idx")
}

enum asistencia_estado {
  A
  I
  M
}
